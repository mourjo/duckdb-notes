# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Datageneration with Java and querying with DuckDB

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'
    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.yml"
    - name: duckdb setup
      uses: opt-nc/setup-duckdb-action@v1.0.7
      with:
        version: v1.0.0
    - name: Build with Maven
      run:
        cd datagenerator ;
        mvn clean package
    - name: Execute data generator
      run:
        cd datagenerator ;
        mvn compile exec:java -Dexec.mainClass=me.mourjo.Main
    - name: duckdb read from csv
      run:
        duckdb -c "select reason, count(*) as num_adjustments from 'datagenerator/adjusted_transactions.csv' group by 1 order by 2 desc;"
    - name: duckdb read from joining mysql,pg
      run: >
        duckdb -c "
        ATTACH 'host=localhost port=3306 database=flock user=swan password=mallard' AS mysql_db (TYPE mysql_scanner, READ_ONLY);
        ATTACH 'host=localhost port=5432 dbname=flock user=swan password=mallard' AS pg_db (TYPE postgres_scanner, READ_ONLY);

        select tier,
                count(o.id) AS num_orders,
                sum(o.delivery_charge)/sum(total_amount) AS delivery_charge_rate
        from pg_db.users u join mysql_db.orders o
        on u.id = o.created_by
        group by tier order by 1;"
    - name: duckdb read from joining mysql,pg,csv
      run: >
        duckdb -c "
        ATTACH 'host=localhost port=3306 database=flock user=swan password=mallard' AS mysql_db (TYPE mysql_scanner, READ_ONLY);
        ATTACH 'host=localhost port=5432 dbname=flock user=swan password=mallard' AS pg_db (TYPE postgres_scanner, READ_ONLY);

        select reason,
                user_id,
                tier,
                total_amount,
                order_id,
                tax_amount,
                delivery_charge,
                currency,
                adj.timestamp
        from pg_db.users u join mysql_db.orders o on u.id = o.created_by 
        join 'datagenerator/adjusted_transactions.csv' adj on  adj.user_id = u.id
        order by o.id, adj.timestamp limit 50; "  
